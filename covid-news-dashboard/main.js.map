{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/countries/countries.component.ts","./src/app/components/countries/countries.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/data-service.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { DataServiceService } from 'src/app/services/data-service.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private dataservice: DataServiceService) { }\n\n  ngOnInit(): void {\n\n    this.dataservice.getGlobalData()\n      .subscribe(\n        {\n          next: (result) => {\n            console.log(result);\n\n          }\n        }\n      )\n  }\n\n}\n","<div class=\"jumbotron bg-light text-center\">\r\n    <h1 class=\"display-4\">Corona Cases Dashboard</h1>\r\n    <hr>\r\n    <p class=\"lead\">Lorem ipsum dolor sit amet consectetur, adipisicing elit. Aut quasi nulla tempore a, eveniet maxime aliquid quo labore nobis vitae, dolorem minima earum debitis fugiat deleniti perspiciatis amet ipsam quidem?</p>\r\n    <hr class=\"my-4\">\r\n    <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Inventore numquam corrupti quos illo enim expedita repudiandae commodi blanditiis deleniti. Maxime consequuntur voluptas beatae, doloribus quasi sint dolorem maiores. Necessitatibus, ullam.</p>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron bg-light text-center\">\n    <h1 class=\"display-4\">Corona Cases - Country Wise</h1>\n    <hr>\n    <p class=\"lead\">Lorem ipsum dolor sit amet consectetur, adipisicing elit. Aut quasi nulla tempore a, eveniet maxime aliquid quo labore nobis vitae, dolorem minima earum debitis fugiat deleniti perspiciatis amet ipsam quidem?</p>\n    <hr class=\"my-4\">\n    <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Inventore numquam corrupti quos illo enim expedita repudiandae commodi blanditiis deleniti. Maxime consequuntur voluptas beatae, doloribus quasi sint dolorem maiores. Necessitatibus, ullam.</p>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid-news-dashboard';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" href=\"#\"><b>COVID 19</b> Tracker</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" aria-current=\"page\" routerLink=\"/\">Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink=\"countries\">Countries</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { GlobalDataSummary } from '../models/globalData';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n\n  private globalDataURL = `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/03-13-2021.csv`;\n  constructor(private http: HttpClient) { }\n\n  getGlobalData() {\n    return this.http.get(this.globalDataURL, { responseType: 'text' }).pipe(\n      map(result => {\n        let data : GlobalDataSummary[] = [];\n        let rows = result.split('\\n');\n        rows.splice(0 , 1);\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/);\n          data.push({\n            country_region : cols[3],\n            confirmed : +cols[7],\n            deaths : +cols[8],\n            recovered : +cols[9],\n            active : +cols[10],\n            incident_rate : +cols[12],\n            case_fatality_ratio : +cols[13]\n          })\n        })\n\n        console.log(data);\n        return [];\n      })\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\n\nconst routes: Routes = [\n  { path : '', component : HomeComponent},\n  { path : 'countries', component : CountriesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}